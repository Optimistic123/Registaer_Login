[{"E:\\Webdev\\intern_task\\client\\src\\components\\Pages\\Register.js":"1","E:\\Webdev\\intern_task\\client\\src\\components\\Pages\\Login.js":"2","E:\\Webdev\\intern_task\\client\\src\\components\\Pages\\Home.js":"3","E:\\Webdev\\intern_task\\client\\src\\components\\Navbar.js":"4","E:\\Webdev\\intern_task\\client\\src\\App.js":"5","E:\\Webdev\\intern_task\\client\\src\\components\\Pages\\Products.js":"6","E:\\Webdev\\intern_task\\client\\src\\components\\Pages\\Services.js":"7","E:\\Webdev\\intern_task\\client\\src\\components\\Pages\\Aboutus.js":"8"},{"size":2274,"mtime":1608567272445,"results":"9","hashOfConfig":"10"},{"size":1890,"mtime":1608567156233,"results":"11","hashOfConfig":"10"},{"size":172,"mtime":1608562186598,"results":"12","hashOfConfig":"10"},{"size":2389,"mtime":1608561932617,"results":"13","hashOfConfig":"10"},{"size":996,"mtime":1608561606015,"results":"14","hashOfConfig":"10"},{"size":199,"mtime":1608562570792,"results":"15","hashOfConfig":"10"},{"size":207,"mtime":1608562612723,"results":"16","hashOfConfig":"10"},{"size":173,"mtime":1608562640238,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"prd6rv",{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Webdev\\intern_task\\client\\src\\components\\Pages\\Register.js",["35"],"E:\\Webdev\\intern_task\\client\\src\\components\\Pages\\Login.js",["36"],"import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport './login.css'\r\n\r\nfunction Login(props) {\r\n\r\n    const [logindata,setLogindata] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n        success:'',\r\n        error:''\r\n      });\r\n    \r\n    const { email, password ,success, error} = logindata;\r\n\r\n    function handleChange(event) {\r\n      const { name, value } = event.target;\r\n      \r\n      setLogindata(prevlogidata => {\r\n          return {...prevlogidata, [name]:value, suucess:'', error:''};\r\n      });\r\n     }\r\n\r\n     const submitlogindata = async e => {\r\n\r\n        e.preventDefault();\r\n        setLogindata({ ...logindata });\r\n\r\n\r\n      try {\r\n          const response =  await axios.post('http://localhost:5000/api/users/login', {email, password} )\r\n          setLogindata({...logindata,name: '',email: '',password: '',success:response.data.message});\r\n         \r\n      } catch (error) {\r\n        // console.log(error.response);\r\n        setLogindata({...logindata, error: error.response.data.error });\r\n          \r\n      }\r\n      };\r\n\r\n\r\n    return (\r\n      <div className='login'>\r\n        <div className='login_img'>\r\n            <img className='register_Img' src=\"images/undraw_team_up_ip2x.svg\" alt=\"image\" />\r\n        </div>\r\n        <form noValidate onSubmit={submitlogindata}>   \r\n           \r\n          <div className='login_input'>\r\n            {success && `${success}`}\r\n            {error && `${error}`}\r\n            <input onChange={handleChange} name='email' value={logindata.email} placeholder=\"email\" id=\"email\"  type=\"email\" />\r\n            <input onChange={handleChange} name='password' value={logindata.password} placeholder=\"Password\" id=\"password\" type=\"password\" />\r\n            <button className='button_login' type=\"submit\" >login</button>\r\n          </div>  \r\n        </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n\r\n","E:\\Webdev\\intern_task\\client\\src\\components\\Pages\\Home.js",[],"E:\\Webdev\\intern_task\\client\\src\\components\\Navbar.js",["37"],"E:\\Webdev\\intern_task\\client\\src\\App.js",[],"E:\\Webdev\\intern_task\\client\\src\\components\\Pages\\Products.js",[],"E:\\Webdev\\intern_task\\client\\src\\components\\Pages\\Services.js",[],"E:\\Webdev\\intern_task\\client\\src\\components\\Pages\\Aboutus.js",[],{"ruleId":"38","severity":1,"message":"39","line":47,"column":15,"nodeType":"40","endLine":47,"endColumn":71},{"ruleId":"38","severity":1,"message":"39","line":45,"column":13,"nodeType":"40","endLine":45,"endColumn":94},{"ruleId":"41","severity":1,"message":"42","line":12,"column":10,"nodeType":"43","messageId":"44","endLine":12,"endColumn":16},"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-unused-vars","'button' is assigned a value but never used.","Identifier","unusedVar"]